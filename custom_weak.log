usage: Train.py [-h] [-c CONFIG] [--print_config [=flags]]
                [--seed_everything SEED_EVERYTHING] [--trainer CONFIG]
                [--trainer.accelerator.help CLASS_PATH_OR_NAME]
                [--trainer.accelerator ACCELERATOR]
                [--trainer.strategy.help CLASS_PATH_OR_NAME]
                [--trainer.strategy STRATEGY] [--trainer.devices DEVICES]
                [--trainer.num_nodes NUM_NODES]
                [--trainer.precision PRECISION]
                [--trainer.logger.help CLASS_PATH_OR_NAME]
                [--trainer.logger LOGGER]
                [--trainer.callbacks.help CLASS_PATH_OR_NAME]
                [--trainer.callbacks CALLBACKS]
                [--trainer.fast_dev_run FAST_DEV_RUN]
                [--trainer.max_epochs MAX_EPOCHS]
                [--trainer.min_epochs MIN_EPOCHS]
                [--trainer.max_steps MAX_STEPS]
                [--trainer.min_steps MIN_STEPS] [--trainer.max_time MAX_TIME]
                [--trainer.limit_train_batches LIMIT_TRAIN_BATCHES]
                [--trainer.limit_val_batches LIMIT_VAL_BATCHES]
                [--trainer.limit_test_batches LIMIT_TEST_BATCHES]
                [--trainer.limit_predict_batches LIMIT_PREDICT_BATCHES]
                [--trainer.overfit_batches OVERFIT_BATCHES]
                [--trainer.val_check_interval VAL_CHECK_INTERVAL]
                [--trainer.check_val_every_n_epoch CHECK_VAL_EVERY_N_EPOCH]
                [--trainer.num_sanity_val_steps NUM_SANITY_VAL_STEPS]
                [--trainer.log_every_n_steps LOG_EVERY_N_STEPS]
                [--trainer.enable_checkpointing {true,false,null}]
                [--trainer.enable_progress_bar {true,false,null}]
                [--trainer.enable_model_summary {true,false,null}]
                [--trainer.accumulate_grad_batches ACCUMULATE_GRAD_BATCHES]
                [--trainer.gradient_clip_val GRADIENT_CLIP_VAL]
                [--trainer.gradient_clip_algorithm GRADIENT_CLIP_ALGORITHM]
                [--trainer.deterministic DETERMINISTIC]
                [--trainer.benchmark {true,false,null}]
                [--trainer.inference_mode {true,false}]
                [--trainer.use_distributed_sampler {true,false}]
                [--trainer.profiler.help CLASS_PATH_OR_NAME]
                [--trainer.profiler PROFILER]
                [--trainer.detect_anomaly {true,false}]
                [--trainer.barebones {true,false}]
                [--trainer.plugins.help CLASS_PATH_OR_NAME]
                [--trainer.plugins PLUGINS]
                [--trainer.sync_batchnorm {true,false}]
                [--trainer.reload_dataloaders_every_n_epochs RELOAD_DATALOADERS_EVERY_N_EPOCHS]
                [--trainer.default_root_dir DEFAULT_ROOT_DIR]
                [--model.help [CLASS_PATH_OR_NAME]]
                --model CONFIG | CLASS_PATH_OR_NAME | .INIT_ARG_NAME VALUE
                [--data CONFIG] --data.data_dir DATA_DIR
                [--data.batch_size BATCH_SIZE]
                [--data.num_workers NUM_WORKERS]
                [--data.max_samples MAX_SAMPLES] [--data.pred_file PRED_FILE]
                [--data.train_split_ratio TRAIN_SPLIT_RATIO]
                [--data.val_split_ratio VAL_SPLIT_RATIO]
                [--data.random_state RANDOM_STATE]
                [--data.return_attrs {true,false}]
                [--data.enable_dp {true,false}]
                [--data.mia_strategy MIA_STRATEGY] [--do_train {true,false}]
                [--do_validate {true,false}] [--do_test {true,false}]
                [--do_predict {true,false}] [--do_analyze {true,false}]
                [--do_attack {true,false}]
                [--do_classifier_attack {true,false}]
                [--do_create_synthetic_data {true,false}]
                [--ckpt_path CKPT_PATH]
                [--attack_include_identifiers {true,false}]
                [--attack_include_rating {true,false}]
                [--attack_age_as_buckets {true,false}]
                [--attack_identifiers_one_based {true,false}]
                [--attack_remap_occ_1_based {true,false}]
                [--attack_age_label_mode {code,years,bucket}]
                [--attack_train_source {synthetic_outputs,predicted_data}]
                [--attack_test_source {synthetic_outputs,predicted_data}]
                [--synthetic_hdf5_path SYNTHETIC_HDF5_PATH]
                [--blackbox_hdf5_path BLACKBOX_HDF5_PATH]
                [--blackbox_dir BLACKBOX_DIR]
                [--qualifying_file QUALIFYING_FILE]
                [--output_predictions OUTPUT_PREDICTIONS]
                [--optimizer.help [CLASS_PATH_OR_NAME]]
                [--optimizer CONFIG | CLASS_PATH_OR_NAME | .INIT_ARG_NAME VALUE]
                [--lr_scheduler.help CLASS_PATH_OR_NAME]
                [--lr_scheduler CONFIG | CLASS_PATH_OR_NAME | .INIT_ARG_NAME VALUE]
error: Parser key "model":
  Does not validate against any of the Union subtypes
  Subtypes: [<class 'NoneType'>, <class 'pytorch_lightning.core.module.LightningModule'>]
  Errors:
    - Expected a <class 'NoneType'>
    - Problem with given class_path 'models.CustomDP_SGD':
        Validation failed: Key 'noise_scale' is not expected
  Given value type: <class 'dict'>
  Given value: {'class_path': 'models.CustomDP_SGD', 'init_args': {'num_users': 6040, 'num_items': 3952, 'embed_dim': 32, 'num_genders': 2, 'num_occupations': 21, 'genre_dim': 19, 'use_attrs': True, 'enable_dp': False, 'noise_type': 'gaussian', 'mlp_dims': [128, 64], 'dropout': 0.2, 'learning_rate': 0.001, 'l2_penalty': 0.001, 'loss_function': 'Huber', 'target_min': 1.0, 'target_max': 5.0, 'noise_scale': 0.532, 'dp_microbatch_size': 32, 'clip_norm': 1.0, 'delta': 1e-05, 'predict_file': 'custom_weak'}}
